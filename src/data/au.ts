import { type LatLng, distance, interpolate } from "../helper.js";

const nswRaw = `140.995,-28.995,0.0
148.995,-28.97604,0.0
149.47361,-28.54956,0.0
150.28198,-28.49766,0.0
150.87524,-28.61346,0.0
151.3916,-28.96009,0.0
151.88599,-28.78692,0.0
151.88599,-28.4542,0.0
152.50122,-28.16888,0.0
153.02856,-28.27536,0.0
153.59985,-28.11075,0.0
154.00,-28.11075,0.0
154.00,-37.51,0.0
150.00,-37.51,0.0
148.07123,-36.79132,0.0
148.18608,-36.62472,0.0
148.07917,-36.53614,0.0
147.88772,-36.03995,0.0
147.7002,-35.96467,0.0
147.5498,-35.99456,0.0
147.43103,-35.98023,0.0
147.34963,-36.08776,0.0
147.11758,-36.08518,0.0
147.03358,-36.1234,0.0
146.90611,-36.11627,0.0
146.43518,-35.98187,0.0
146.3736,-36.05743,0.0
145.92659,-36.02911,0.0
145.51914,-35.89808,0.0
145.00193,-35.88088,0.0
144.96185,-35.99023,0.0
145.00305,-36.08351,0.0
144.94362,-36.09115,0.0
144.87478,-36.07592,0.0
144.80858,-36.13848,0.0
144.71217,-36.11941,0.0
144.60816,-36.08309,0.0
144.37097,-35.87819,0.0
144.33608,-35.78504,0.0
144.25631,-35.75777,0.0
144.03763,-35.57468,0.0
143.98682,-35.56128,0.0
143.94889,-35.51499,0.0
143.84836,-35.48686,0.0
143.73966,-35.40798,0.0
143.67814,-35.38491,0.0
143.63193,-35.40635,0.0
143.53088,-35.34201,0.0
143.5362,-35.2422,0.0
143.35917,-35.18851,0.0
143.26208,-34.81286,0.0
142.75998,-34.64663,0.0
142.66162,-34.7981,0.0
142.45503,-34.75869,0.0
142.2139,-34.29126,0.0
142.18939,-34.21247,0.0
141.90079,-34.14363,0.0
141.66942,-34.13116,0.0
141.55197,-34.24473,0.0
140.995,-34.03019,0.0`;

const vicRaw = `140.95,-39.3,0.0
140.96044,-33.97665,0.0
141.0569,-34.04669,0.0
141.24661,-34.05852,0.0
141.33224,-34.11721,0.0
141.36005,-34.10299,0.0
141.49876,-34.15045,0.0
141.52863,-34.18426,0.0
141.64879,-34.10242,0.0
141.76003,-34.08309,0.0
141.8626,-34.10942,0.0
141.95057,-34.11237,0.0
142.04589,-34.09568,0.0
142.09648,-34.15074,0.0
142.15038,-34.14363,0.0
142.23143,-34.18737,0.0
142.24992,-34.20837,0.0
142.24927,-34.25736,0.0
142.2835,-34.29106,0.0
142.40753,-34.33748,0.0
142.38041,-34.45901,0.0
142.43706,-34.56425,0.0
142.48169,-34.59195,0.0
142.58057,-34.75402,0.0
142.71103,-34.57669,0.0
142.79411,-34.54078,0.0
142.81885,-34.56422,0.0
142.89642,-34.63095,0.0
143.22327,-34.69872,0.0
143.37433,-34.80253,0.0
143.33862,-34.98725,0.0
143.41553,-35.17605,0.0
143.5968,-35.20523,0.0
143.65494,-35.33899,0.0
143.99477,-35.48889,0.0
144.72816,-36.0537,0.0
145.01128,-35.82227,0.0
145.54138,-35.79108,0.0
145.93663,-35.92584,0.0
146.48895,-35.93354,0.0
146.88721,-36.05132,0.0
147.68372,-35.88682,0.0
148.07484,-36.05726,0.0
148.12317,-36.4036,0.0
148.34015,-36.68384,0.0
148.1781,-36.76089,0.0
150.06892,-37.51224,0.0
154.0,-37.51224,0.0
154.0,-39.3,0.0`;

const convertRaw = (s: string): { lat: number, lng: number }[] => {

  const out = s.split('\n').map((line) => {
    const parts = line.split(',').map((x) => +x);
    return {
      lat: -parts[1] / 90.0 * Math.PI,
      lng: parts[0] / 180.0 * Math.PI,
    };
  });

  // TODO: super lazy way that inserts additional points to show this is the right "place"
  // just creates points 0.2 until the minimum distance is sensible
  // should really do distance-based but requires more maths
  for (let i = 0; i < out.length; ++i) {
    const prev = out.at(i - 1)!;
    const curr = out[i - 0];

    const d = distance(prev, curr);
    if (d > 1_000) {
      const add = interpolate(prev, curr, 0.2);
      out.splice(i, 0, add);
    }
  }

  return out;
};

export const nswPoints = convertRaw(nswRaw);
export const vicPoints = convertRaw(vicRaw);
